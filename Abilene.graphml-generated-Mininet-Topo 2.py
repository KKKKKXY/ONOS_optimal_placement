#!/usr/bin/python

"""
Custom topology for Mininet, generated by GraphML-Topo-to-Mininet-Network-Generator.
"""
from mininet.topo import Topo
from mininet.net import Mininet
from mininet.node import RemoteController, OVSSwitch, OVSKernelSwitch
from mininet.link import TCLink
from mininet.cli import CLI
from mininet.log import setLogLevel, info
import time
from datetime import datetime

topos = { 'generated': ( lambda: GeneratedTopo() ) }

class GeneratedTopo( Topo ):
    "Internet Topology Zoo Specimen."

    net = Mininet( controller=RemoteController, switch=OVSKernelSwitch, waitConnected=True, link=TCLink )

    info( "*** Creating (reference) controllers" )

    # add controllers
    c1 = net.addController('c1', controller=RemoteController, ip='172.20.0.5', port=6653 )
    c2 = net.addController('c2', controller=RemoteController, ip='172.20.0.6', port=6653 )


    # add nodes, switches first...
    NewYork = net.addSwitch( 's0', protocols='OpenFlow13' )
    Chicago = net.addSwitch( 's1', protocols='OpenFlow13' )
    WashingtonDC = net.addSwitch( 's2', protocols='OpenFlow13' )
    Seattle = net.addSwitch( 's3', protocols='OpenFlow13' )
    Sunnyvale = net.addSwitch( 's4', protocols='OpenFlow13' )
    LosAngeles = net.addSwitch( 's5', protocols='OpenFlow13' )
    Denver = net.addSwitch( 's6', protocols='OpenFlow13' )
    KansasCity = net.addSwitch( 's7', protocols='OpenFlow13' )
    Houston = net.addSwitch( 's8', protocols='OpenFlow13' )
    Atlanta = net.addSwitch( 's9', protocols='OpenFlow13' )
    Indianapolis = net.addSwitch( 's10', protocols='OpenFlow13' )

    # ... and now hosts
    NewYork_host = net.addHost( 'h0' )
    Chicago_host = net.addHost( 'h1' )
    WashingtonDC_host = net.addHost( 'h2' )
    Seattle_host = net.addHost( 'h3' )
    Sunnyvale_host = net.addHost( 'h4' )
    LosAngeles_host = net.addHost( 'h5' )
    Denver_host = net.addHost( 'h6' )
    KansasCity_host = net.addHost( 'h7' )
    Houston_host = net.addHost( 'h8' )
    Atlanta_host = net.addHost( 'h9' )
    Indianapolis_host = net.addHost( 'h10' )

    # add edges between switch and corresponding host
    net.addLink( NewYork , NewYork_host )
    net.addLink( Chicago , Chicago_host )
    net.addLink( WashingtonDC , WashingtonDC_host )
    net.addLink( Seattle , Seattle_host )
    net.addLink( Sunnyvale , Sunnyvale_host )
    net.addLink( LosAngeles , LosAngeles_host )
    net.addLink( Denver , Denver_host )
    net.addLink( KansasCity , KansasCity_host )
    net.addLink( Houston , Houston_host )
    net.addLink( Atlanta , Atlanta_host )
    net.addLink( Indianapolis , Indianapolis_host )

    # add edges between switches
    net.addLink( NewYork , Chicago, bw=10, delay='5.82294818601ms')
    net.addLink( NewYork , WashingtonDC, bw=10, delay='1.66933354639ms')
    net.addLink( Chicago , Indianapolis, bw=10, delay='1.33817152535ms')
    net.addLink( WashingtonDC , Atlanta, bw=10, delay='4.43098085052ms')
    net.addLink( Seattle , Sunnyvale, bw=10, delay='5.78617273178ms')
    net.addLink( Seattle , Denver, bw=10, delay='8.33987030826ms')
    net.addLink( Sunnyvale , LosAngeles, bw=10, delay='2.55695492867ms')
    net.addLink( Sunnyvale , Denver, bw=10, delay='7.64100479966ms')
    net.addLink( LosAngeles , Houston, bw=10, delay='11.2143737889ms')
    net.addLink( Denver , KansasCity, bw=10, delay='4.53199947571ms')
    net.addLink( KansasCity , Houston, bw=10, delay='5.29499644815ms')
    net.addLink( KansasCity , Indianapolis, bw=10, delay='3.7130222434ms')
    net.addLink( Houston , Atlanta, bw=10, delay='5.73005892826ms')
    net.addLink( Atlanta , Indianapolis, bw=10, delay='3.49428237002ms')

   # net.addLink( NewYork , c1, bw=10, delay='100ms')


    info( "*** Starting network" )
    net.build()
    c1.start()
    c2.start()
    #NewYork.start([ c1 ])


    net.start()

    info( "*** Running CLI" )
    CLI(net)

    info( "*** Stopping network" )
    net.stop()

if __name__ == '__main__':
    setLogLevel('info')
